#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
#include <memory.h>
using namespace std;

int d[101][101];
int check[101][101];

int dx[4] = {1,-1,0,0};
int dy[4] = {0,0,1,-1};
int n;

void dfs(int x, int y) {

	check[x][y] = 2;

	for (int i = 0; i < 4; i++) {
		int mx = x + dx[i];
		int my = y + dy[i];

		if (mx >= 0 && mx < n && my >= 0 && my < n && check[mx][my] == 0) {
			dfs(mx, my);
		}
	}

}

int main() {

	scanf("%d",&n);

	int maxheight = 0;
	int count = 0;
	int maxresult = 1;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			scanf("%d",&d[i][j]);
			if (maxheight < d[i][j]) { maxheight = d[i][j]; }
		}
	}
	//printf("%d\n",maxheight);
	//printf("\n");
	for (int h = 1; h <= maxheight; h++) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (d[i][j] <= h) { // 높이보다 이하이면
					check[i][j] = 1; // 잠김
				}
			}
		}
		
		/*for(int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				printf("%d ",check[i][j]);
			}
			printf("\n");
		}*/

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (check[i][j] == 0) {
					dfs(i,j);
					count++;
				}
			}
		}
		/*printf("\n");
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				printf("%d ", check[i][j]);
			}
			printf("\n");
		}
		printf("cur_height : %d count : %d\n",h,count);*/
		if (maxresult < count) { maxresult = count; }
		count = 0;
		memset(check, 0, sizeof(check));
		//printf("\n");
	}

	printf("%d\n",maxresult);

	return 0;
}