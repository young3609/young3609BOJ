#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <vector>
#include <queue>
using namespace std;
vector<int>a[1001];
bool check[1001];
void dfs(int x) {

	check[x] = true;
	printf("%d ", x);

	for (int i = 0; i < a[x].size(); i++) {
		int y = a[x][i];
		if (check[y] == false) {
			dfs(y);
		}
	}

}

void bfs(int x) {
	queue<int> q;
	memset(check, false, sizeof(check));

	check[x] = true;
	q.push(x);
	while (!q.empty()) {
		int y = q.front();
		q.pop();
		printf("%d ", y);

		for (int i = 0; i < a[y].size(); i++) {
			int next = a[y][i];
			if (check[next] == false) {
				check[next] = true;
				q.push(next);
			}
		}
	}
}

int main() {

	int n, m, start;
	cin >> n >> m >> start;
	for (int i = 0; i < m; i++) {
		int u, v;
		cin >> u >> v;
		a[u].push_back(v); a[v].push_back(u);
	}
	for (int i = 1; i <= n; i++) {
		sort(a[i].begin(), a[i].end());
	}

	dfs(start);
	cout << "\n";
	bfs(start);
	cout << "\n";

	return 0;
}
