// 规过 1

#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
using namespace std;
#define MAX 10001

int a[MAX];
int d[MAX];

int main() {

	int n;
	scanf("%d",&n);

	for (int i = 1; i <= n; i++) {
		scanf("%d",&a[i]);
	}

	d[1] = a[1];
	d[2] = a[1] + a[2];

	for (int i = 3; i <= n; i++) {
		d[i] = d[i - 1];
		if (d[i] < d[i - 2] + a[i]) {
			d[i] = d[i - 2] + a[i];
		}
		if (d[i] < d[i - 3] + a[i - 1] + a[i]) {
			d[i] = d[i - 3] + a[i - 1] + a[i];
		}
	}

	printf("%d\n",d[n]);
	return 0;
}


//规过 2

#define _CRT_SECURE_NO_WARNINGS
#include <cstdio>
using namespace std;
#define MAX 10001

int max(int a, int b) {

	if (a > b) { return a; }
	else { return b; }
}

int a[MAX];
int d[MAX][3];

int main() {

	int n;
	scanf("%d",&n);

	for (int i = 1; i <= n; i++) {
		scanf("%d",&a[i]);
	}

	d[1][0] = 0;
	d[1][1] = a[1];
	d[1][2] = a[1];

	for (int i = 2; i <= n; i++) {
		d[i][0] = max(d[i - 1][0],max(d[i - 1][1], d[i - 1][2]));
		d[i][1] = d[i - 1][0] + a[i];
		d[i][2] = d[i - 1][1] + a[i];
	}

	printf("%d\n",max(d[n][0], max(d[n][1],d[n][2])));
	return 0;
}
